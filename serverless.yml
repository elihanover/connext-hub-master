service: connext-watcher

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-sqs-local # local testing guy

provider:
  name: aws
  runtime: nodejs8.10
  # aws queue
  region: us-east-2
  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #       - "sqs:SendMessage"
  #       - "sqs:GetQueueUrl"
  #     Resource: "arn:aws:sqs:${self:provider.region}:626689416502:TestQ"
  #   - Effect: "Allow"
  #     Action:
  #       - "sqs:ListQueues"
  #     Resource: "arn:aws:sqs:${self:provider.region}:TestQ"

package:
  excludeDevDependencies: true
  include:
    - functions/LedgerChannel.json
    - .env
    # - models/**

functions:
  # GET FUNCTIONS
  challengeEvent:
    handler: functions/challengeEvent.challengeEvent
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt:
              - ContractEventQueue
              - Arn
  catchEvents:
    handler: functions/catchEvents.catchEvents
    events:
      - http:
          path: catchEvents
          method: get
          cors: true
  # POST FUNCTIONS
  vcStateUpdate:
    handler: functions/vcStateUpdate.vcStateUpdate
    events:
      - http:
          path: virtualchannel/{vcid}/update
          method: post
          request:
            paths:
              vc: true
  # admin functions
  setLastBlock:
    handler: functions/admin.setLastBlock
    events:
      - http:
          path: admin/setLastBlock/{block}
          method: post
          request:
            paths:
              block: true
  testCatch:
    handler: functions/testCatch.handler
    events:
      - http:
          path: testCatch
          method: get

resources:
  Resources:
    ContractEventQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "ContractEventQueue"
    EventTable:
      Type: AWS::DynamoDB::Table
      Properties:
          TableName: vcStateUpdates
          AttributeDefinitions:
            - AttributeName: eventType
              AttributeType: S
            - AttributeName: nonce
              AttributeType: N
          KeySchema:
            - AttributeName: eventType
              KeyType: HASH
            - AttributeName: nonce
              KeyType: RANGE
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    LastBlockTable:
      Type: AWS::DynamoDB::Table
      Properties:
          TableName: lastBlock
          AttributeDefinitions:
            - AttributeName: test
              AttributeType: S
            - AttributeName: lastBlock
              AttributeType: N
          KeySchema:
            - AttributeName: test
              KeyType: HASH
            - AttributeName: lastBlock
              KeyType: RANGE
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
